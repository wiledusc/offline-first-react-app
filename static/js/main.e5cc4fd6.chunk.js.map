{"version":3,"sources":["service/api.js","components/ChecklistItem.jsx","App.js","serviceWorker.js","index.js"],"names":["fetchTodos","a","id","primary","secondary","person","ChecklistItem","useState","isChecked","setChecked","ListItem","button","onClick","ListItemAvatar","ListItemText","StyledFab","styled","Fab","position","zIndex","top","left","right","margin","App","todos","setTodos","useEffect","then","result","localStorage","setItem","JSON","stringify","Fragment","CssBaseline","Paper","square","sx","pb","Typography","variant","gutterBottom","component","p","List","mb","map","key","ListSubheader","bgcolor","AppBar","color","bottom","Toolbar","IconButton","aria-label","Box","flexGrow","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e5cc4fd6.chunk.js","sourcesContent":["//const axios = require('axios');\n\nconst fetchTodos = async () => {\n    /*\n    const url = 'https://jsonplaceholder.typicode.com/todos';\n\n    return await axios.get(url)\n        .then(res => {\n            const result = res.data;\n            if (result && result.length !== 0) {\n                return result.slice(0, 10);\n            }\n            return [];\n        }).catch(error => {\n            console.error(error);\n            return []\n        });\n    */\n   return [\n    {\n      id: 1,\n      primary: 'Brunch this week?',\n      secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\n      person: '/static/images/avatar/5.jpg',\n    },\n    {\n      id: 2,\n      primary: 'Birthday Gift',\n      secondary: `Do you have a suggestion for a good present for John on his work\n        anniversary. I am really confused & would love your thoughts on it.`,\n      person: '/static/images/avatar/1.jpg',\n    },\n    {\n      id: 3,\n      primary: 'Recipe to try',\n      secondary: 'I am try out this new BBQ recipe, I think this might be amazing',\n      person: '/static/images/avatar/2.jpg',\n    },\n    {\n      id: 4,\n      primary: 'Yes!',\n      secondary: 'I have the tickets to the ReactConf for this year.',\n      person: '/static/images/avatar/3.jpg',\n    },\n    {\n      id: 5,\n      primary: \"Doctor's Appointment\",\n      secondary: 'My appointment for the doctor was rescheduled for next Saturday.',\n      person: '/static/images/avatar/4.jpg',\n    },\n    {\n      id: 6,\n      primary: 'Discussion',\n      secondary: `Menus that are generated by the bottom app bar (such as a bottom\n        navigation drawer or overflow menu) open as bottom sheets at a higher elevation\n        than the bar.`,\n      person: '/static/images/avatar/5.jpg',\n    },\n    {\n      id: 7,\n      primary: 'Summer BBQ',\n      secondary: `Who wants to have a cookout this weekend? I just got some furniture\n        for my backyard and would love to fire up the grill.`,\n      person: '/static/images/avatar/1.jpg',\n    },\n  ];\n};\n\nexport default fetchTodos;\n","import React, { useState } from \"react\";\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\r\n\r\nfunction ChecklistItem({primary, secondary}) {\r\n    const [isChecked, setChecked] = useState(false);\r\n\r\n    function handleToggleCheckboxItem() {\r\n        setChecked(!isChecked);\r\n    }\r\n\r\n    return (\r\n        <ListItem button onClick={handleToggleCheckboxItem}>\r\n            <ListItemAvatar>\r\n                {isChecked ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />}\r\n            </ListItemAvatar>\r\n            <ListItemText primary={primary} secondary={secondary} />\r\n            <KeyboardArrowRightIcon />\r\n        </ListItem>\r\n\r\n    );\r\n}\r\n\r\nexport default ChecklistItem;","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport fetchTodos from \"./service/api\";\nimport ChecklistItem from \"./components/ChecklistItem\";\n\nimport { styled } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Paper from '@mui/material/Paper';\nimport Fab from '@mui/material/Fab';\nimport List from '@mui/material/List';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreIcon from '@mui/icons-material/MoreVert';\n\nconst LOCAL_STORAGE_KEY = \"todo-list\";\n\nconst StyledFab = styled(Fab)({\n  position: 'absolute',\n  zIndex: 1,\n  top: -30,\n  left: 0,\n  right: 0,\n  margin: '0 auto',\n});\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    fetchTodos()\n      .then(result => {\n        setTodos(result);\n      });\n\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square sx={{ pb: '50px' }}>\n        <Typography variant=\"h5\" gutterBottom component=\"div\" sx={{ p: 2, pb: 0 }}>\n          CheckList\n        </Typography>\n        <List sx={{ mb: 2 }}>\n          {todos.map(({ id, primary, secondary }) => (\n            <React.Fragment key={id}>\n              {id === 1 && (\n                <ListSubheader sx={{ bgcolor: 'background.paper' }}>\n                  Cabe√ßalho\n                </ListSubheader>\n              )}\n\n              {id === 3 && (\n                <ListSubheader sx={{ bgcolor: 'background.paper' }}>\n                  Items Checklist\n                </ListSubheader>\n              )}\n\n              <ChecklistItem id={id} primary={primary} secondary={secondary}/>\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" sx={{ top: 'auto', bottom: 0 }}>\n        <Toolbar>\n          <IconButton color=\"inherit\" aria-label=\"open drawer\">\n            <MenuIcon />\n          </IconButton>\n          <StyledFab color=\"secondary\" aria-label=\"add\">\n            <AddIcon />\n          </StyledFab>\n          <Box sx={{ flexGrow: 1 }} />\n          <IconButton color=\"inherit\">\n            <MoreIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}